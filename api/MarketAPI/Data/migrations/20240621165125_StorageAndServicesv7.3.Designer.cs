// <auto-generated />
using System;
using MarketAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketAPI.Data.migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240621165125_StorageAndServicesv7.3")]
    partial class StorageAndServicesv73
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("MarketAPI.Entities.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CNPJ")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdStorage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameFantasy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("TEXT");

                    b.HasKey("IdClient");

                    b.HasIndex("IdStorage")
                        .IsUnique();

                    b.ToTable("Client");
                });

            modelBuilder.Entity("MarketAPI.Entities.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdStorage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameProduto")
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Qnt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("IdProduto");

                    b.HasIndex("IdStorage");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("MarketAPI.Entities.Services", b =>
                {
                    b.Property<int>("IdServices")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientIdClient")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdClient")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("IdServices");

                    b.HasIndex("ClientIdClient");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("MarketAPI.Entities.Storage", b =>
                {
                    b.Property<int>("IdStorage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdClient")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdStorage");

                    b.ToTable("Storage");
                });

            modelBuilder.Entity("MarketAPI.Entities.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEP")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameUser")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("IdUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MarketAPI.Entities.Client", b =>
                {
                    b.HasOne("MarketAPI.Entities.Storage", "Storage")
                        .WithOne("Client")
                        .HasForeignKey("MarketAPI.Entities.Client", "IdStorage")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("MarketAPI.Entities.Produto", b =>
                {
                    b.HasOne("MarketAPI.Entities.Storage", "Storage")
                        .WithMany("Produto")
                        .HasForeignKey("IdStorage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("MarketAPI.Entities.Services", b =>
                {
                    b.HasOne("MarketAPI.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientIdClient");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("MarketAPI.Entities.Storage", b =>
                {
                    b.Navigation("Client");

                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
